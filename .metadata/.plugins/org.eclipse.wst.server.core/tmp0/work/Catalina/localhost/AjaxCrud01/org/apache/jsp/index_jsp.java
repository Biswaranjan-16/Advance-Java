/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.19
 * Generated at: 2024-07-04 05:57:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\">\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	<div class=\"container\">\n");
      out.write("		\n");
      out.write("		<button type=\"button\" id=\"addFaculty\" class=\"btn btn-primary mt-5\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">Add Faculty</button>\n");
      out.write("		\n");
      out.write("		<div class=\"row col-12 pt-5\">\n");
      out.write("			<table class=\"table table-dark table-striped table-hover\">\n");
      out.write("			  <thead>\n");
      out.write("			    <tr>\n");
      out.write("			      <th scope=\"col\">#</th>\n");
      out.write("			      <th scope=\"col\">Faculty Name</th>\n");
      out.write("			      <th scope=\"col\">Faculty Email</th>\n");
      out.write("			      <th scope=\"col\">Faculty Password</th>\n");
      out.write("			      <th scope=\"col\">Faculty Address</th>\n");
      out.write("			      <th scope=\"col\">Action</th>\n");
      out.write("			    </tr>\n");
      out.write("			  </thead>\n");
      out.write("			  <tbody class=\"table-success\">\n");
      out.write("			    <tr>\n");
      out.write("			      <th scope=\"row\">1</th>\n");
      out.write("			      <td>Mark</td>\n");
      out.write("			      <td>Otto</td>\n");
      out.write("			      <td>@mdo</td>\n");
      out.write("			      <td>Otto</td>\n");
      out.write("			      <td>\n");
      out.write("			      	<a href=\"\" class=\"btn btn-primary\">Edit</a>&nbsp;\n");
      out.write("			      	<a href=\"\" class=\"btn btn-danger\">Delete</a>\n");
      out.write("			      </td>\n");
      out.write("			     </tr>\n");
      out.write("			    \n");
      out.write("			  </tbody>\n");
      out.write("			</table>\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("	\n");
      out.write("	\n");
      out.write("<!-- modal start -->\n");
      out.write("<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n");
      out.write("  <div class=\"modal-dialog\">\n");
      out.write("    <div class=\"modal-content\">\n");
      out.write("      <div class=\"modal-header\">\n");
      out.write("        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Add Faculty</h5>\n");
      out.write("        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n");
      out.write("      </div>\n");
      out.write("      <div class=\"modal-body\">\n");
      out.write("      		<form id=\"myform\">\n");
      out.write("      			<div class=\"mb-3\">\n");
      out.write("					  <label for=\"f1\" class=\"form-label\">Faculty name</label>\n");
      out.write("					  <input type=\"text\" name=\"fname\" class=\"form-control\" id=\"f1\"  required>\n");
      out.write("					  <input type=\"hidden\" name=\"event\" value=\"addFaculty\">\n");
      out.write("				</div>\n");
      out.write("	     		<div class=\"mb-3\">\n");
      out.write("					  <label for=\"f2\" class=\"form-label\">Faculty Email</label>\n");
      out.write("					  <input type=\"email\" name=\"femail\" class=\"form-control\" id=\"f2\" required>\n");
      out.write("				</div>\n");
      out.write("				<div class=\"mb-3\">\n");
      out.write("					  <label for=\"f3\" class=\"form-label\">Faculty Password</label>\n");
      out.write("					  <input type=\"text\" name=\"fpass\" class=\"form-control\" id=\"f3\" required>\n");
      out.write("				</div>\n");
      out.write("				<div class=\"mb-3\">\n");
      out.write("					  <label for=\"f4\" class=\"form-label\">Faculty Address</label>\n");
      out.write("					  <textarea class=\"form-control\" name=\"fadd\" id=\"f4\" rows=\"3\"></textarea>\n");
      out.write("				</div>\n");
      out.write("				<div class=\"mb-3\">\n");
      out.write("					  <input type=\"submit\" class=\"form-control btn btn-info\" value=\"Submit\">\n");
      out.write("				</div>\n");
      out.write("      		</form>\n");
      out.write("      </div>\n");
      out.write("      \n");
      out.write("    </div>\n");
      out.write("  </div>\n");
      out.write("</div>\n");
      out.write("<!-- modal end -->\n");
      out.write("  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script>\n");
      out.write("  <script src=\"https://code.jquery.com/jquery-3.7.1.min.js\"  integrity=\"sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=\" crossorigin=\"anonymous\"></script>\n");
      out.write("  \n");
      out.write("  <script>\n");
      out.write("  $(document).ready(function () {\n");
      out.write("	    $('#myform').on('submit', function (event) {\n");
      out.write("	        event.preventDefault(); // Prevent the form from submitting via the browser\n");
      out.write("  			var formData = $(this).serialize(); // Serialize form data\n");
      out.write("\n");
      out.write("	        $.ajax({\n");
      out.write("	            type: 'POST',\n");
      out.write("	            url: 'faculty', // Replace with your servlet URL\n");
      out.write("	            data: formData,\n");
      out.write("	            success: function (response) {\n");
      out.write("	                if(response.trim()==\"done\"){\n");
      out.write("	                	alert(\"Faculty Added Sussessfully !\");\n");
      out.write("	                	window.location.href=\"index.jsp\";\n");
      out.write("	                }else{\n");
      out.write("	                	alert(\"Something wrong on Server!\");\n");
      out.write("	                }\n");
      out.write("	            },\n");
      out.write("	            error: function (jqXHR, textStatus, errorThrown) {\n");
      out.write("	                // Handle error\n");
      out.write("	                alert('Error submitting form: ' + textStatus);\n");
      out.write("	            }\n");
      out.write("	        });\n");
      out.write("	    });\n");
      out.write("	});\n");
      out.write("\n");
      out.write("  </script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
